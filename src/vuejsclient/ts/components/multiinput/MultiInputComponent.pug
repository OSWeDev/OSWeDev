.multi_input
    .row(v-for="(value, i) in values")
        .col-sm-10
            template(v-if="use_wysiwyg")
                Vuequilleditor(v-model="values[i]" :required="required" :disabled="disabled" @input="emitInput")
            template(v-else)
                template(v-if="type_input == 'slot'")
                    slot(v-bind:value="values[i]" v-model="values[i]" :required="required" :disabled="disabled" @input="emitInput" :field='field' :vo='vo')
                template(v-else-if="type_input == 'custom'")
                    .custom_field_component(:is='custom_field_component' v-model="values[i]" :required="required" :disabled="disabled" @input="emitInput" @input_with_infos="emitInput" :field='field' :vo='vo')
                template(v-else)
                    input(:class="{'form-control': !inline_input_mode}" v-model="values[i]", :type="type_input", :required="required", :disabled="disabled", @input="emitInput" :step='input_step')
        .actions.col-sm-2(v-if="!disabled")
            i.fa-duotone.fa-minus-circle(v-if="values.length > min_values", @click="removeValue(i)")

    .actions.col-sm-2(v-if="(values.length < max_values) && (!disabled)")
        i.fa-duotone.fa-plus-circle(@click="addValue")
