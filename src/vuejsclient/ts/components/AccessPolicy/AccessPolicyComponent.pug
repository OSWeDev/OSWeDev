include ../../../views/mixins/loading.pug

.access_policy
    +loading()
        .row
            .col-sm-4
                .filters
                    .filters-title {{ label('access_policy.admin.filters.filters-title') }}
                    .filters-toggles
                        .row.filters-toggle(v-for="policy_group in ordered_policy_groups")
                            .col-sm-6.text-right {{ label(policy_group.translatable_name) }}
                            .col-sm-6
                                toggle-button(
                                    @change="set_display_policy_group(policy_group.id)" 
                                    :value="display_policy_groups[policy_group.id]" 
                                    :sync="true"
                                    :width="100"
                                    :labels="{checked: label('access_policy.admin.filters.visible'), unchecked: label('access_policy.admin.filters.hidden')}")
            .col-sm-8
                .filters
                    .filters-toggles
                        template(v-for="policy_group in ordered_policy_groups")
                            template(v-if='access_matrix && display_policy_groups && policy_groups_segmentations && display_policy_groups[policy_group.id] && policy_groups_segmentations[policy_group.id]')
                                .row.filters-full-group
                                    button.btn.btn-primary.btn-block.btn-flat(@click="select_full_group(policy_group.id)") 
                                        i.fa-duotone.fa-check-double
                                        | {{ label('access_policy.select_full_group', {policy_group_name : label(policy_group.translatable_name)}) }}
                                    button.btn.btn-secondary.btn-block.btn-flat(@click="unselect_full_group(policy_group.id)") 
                                        i.fa-duotone.fa-empty-set
                                        | {{ label('access_policy.unselect_full_group', {policy_group_name : label(policy_group.translatable_name)}) }}

                                .row
                                    template(v-for="(policy_group_segmentation, i) in policy_groups_segmentations[policy_group.id]")
                                        .filters-toggle-segment
                                            .segment-title {{ policy_group_segmentation.name }}
                                            toggle-button(
                                                @change="switch_display_policy_group_segmentation(policy_group_segmentation)" 
                                                :value="display_policy_group_segmentations[policy_group_segmentation.id]" 
                                                :sync="true"
                                                :width="100"
                                                :labels="{checked: label('access_policy.admin.filters.visible'), unchecked: label('access_policy.admin.filters.hidden')}")

        .row
            .col-sm-12
                .table_container
                    table.table-striped.table-hover(is="vue-scrolling-table")
                        template(slot="thead")
                            tr
                                th {{ label('access_policy.admin.table.headers.first_header') }}
                                th(v-for="role in roles") {{ label(role.translatable_name) }}
                        template(slot="tbody")
                            template(v-for="policy_group in ordered_policy_groups")
                                template(v-if='access_matrix && display_policy_groups && policy_groups_segmentations && display_policy_groups[policy_group.id] && policy_groups_segmentations[policy_group.id]')
                                    template(v-for="policy_group_segmentation in policy_groups_segmentations[policy_group.id]")
                                        template(v-if='!!display_policy_group_segmentations[policy_group_segmentation.id]')
                                            tr.show.collapse.policy(v-for="policy in policy_group_segmentation.policies" :class="{'policy_hidden': !policy_visibility[policy.id]}" :id="policy.translatable_name")
                                                td {{ label(policy.translatable_name) }}
                                                td( v-for="role in roles" 
                                                    :class="{'bg-success': access_matrix[policy.id][role.id], 'bg-secondary': !access_matrix[policy.id][role.id]}"
                                                    :key="policy.id + '_' + role.id")
                                                    toggle-button(
                                                        @change="set_policy(policy.id, role.id)" 
                                                        :class="{'toggle_hidden': !((!inherited_access_matrix[policy.id][role.id]) && (policies_visibility_by_role_id[role.id][policy.id]))}" 
                                                        :value="access_matrix[policy.id][role.id]" 
                                                        :sync="true"
                                                        :width="100"
                                                        :disabled="busy || !((!inherited_access_matrix[policy.id][role.id]) && (policies_visibility_by_role_id[role.id][policy.id]))"
                                                        :labels="{checked: label('access_policy.admin.table.granted'), unchecked: label('access_policy.admin.table.denied')}" 
                                                        v-tooltip="label(policy.translatable_name)")

                                                //- tr.policy_group(:class="{'group_hidden': !policy_groups_vibility[policy_group.id]}")
                                                //-     td 
                                                //-         button.btn.btn-primary(type="button" data-toggle="collapse" :data-target="'.collapseGroup' + policy_group.id" aria-expanded="false" :aria-controls="'collapseGroup' + policy_group.id")
                                                //-             i.collapse.fa.fa-plus.fa-fw(aria-hidden="true" :class="'collapseGroup' + policy_group.id")
                                                //-             i.collapse.show.fa.fa-minus.fa-fw(aria-hidden="true" :class="'collapseGroup' + policy_group.id")
                                                //-         | {{ label(policy_group.translatable_name) }}
                                                //-     td(v-for="role in roles")
