include ../../../../views/mixins/loading.pug

.crud-wrapper
    +loading()
        .crud-table-wrapper
            .table-title
                .row
                    .col-sm-9.crud-table-title
                        h2 {{ CRUDTitle }}
                    .col-sm-3.crud-table-actions
                        .btn-group
                            a.btn.btn-success(role="button" href="#createData" data-toggle="modal")
                                i.fa.fa-plus-circle 
                                span {{ label('crud.actions.create') }}
                            a.btn.btn-danger(role="button" href="#deleteData" data-toggle="modal" v-if="select_options && (select_options.length > 1)")
                                i.fa.fa-trash
                                span {{ label('crud.actions.delete') }}
            datatable.crud_datatable(
                :key="'datatable_' + crud.readDatatable.moduleTable.vo_type"
                :datatable="crud.readDatatable", 
                :update_button="true", 
                :delete_button="true", 
                :multiselectable="true",
                :load_datas="false")

        <!-- Edit Modal HTML -->
        #createData.modal.fade
            .modal-dialog
                .modal-content
                    form(v-on:submit.prevent="createVO")
                        .modal-header
                            h4.modal-title {{ label('crud.create.modal.title') }}
                            button.close(type="button" data-dismiss="modal" aria-hidden="true") &times;
                        .modal-body
                            template(v-if="newVO")
                                template(v-for="field in crud.createDatatable.fields")
                                    template(v-if="field.type == 'Simple'")
                                        .form-group
                                            label {{ t(field.translatable_title) }}
                                            template(v-if="field.moduleTableField.field_type == 'text'")
                                                input.form-control(type="text" v-model="newVO[field.datatable_field_uid]" :required="field.is_required" :disabled="field.is_readonly")
                                            template(v-else-if="field.moduleTableField.field_type == 'boolean'")
                                                input.form-control(type="checkbox" v-model="newVO[field.datatable_field_uid]" :required="field.is_required" :disabled="field.is_readonly")
                                            template(v-else-if="field.moduleTableField.field_type == 'number'")
                                                input.form-control(type="number" v-model="newVO[field.datatable_field_uid]" :required="field.is_required" :disabled="field.is_readonly")
                                            template(v-else-if="field.moduleTableField.field_type == 'float'")
                                                input.form-control(type="number" v-model="newVO[field.datatable_field_uid]" :required="field.is_required" :disabled="field.is_readonly")
                                            template(v-else-if="field.moduleTableField.field_type == 'pct'")
                                                input.form-control(type="number" v-model="newVO[field.datatable_field_uid]" :required="field.is_required" :disabled="field.is_readonly")
                                            template(v-else-if="field.moduleTableField.field_type == 'HourAndMinuteWithoutLimit'")
                                                input.form-control(type="text" v-model="newVO[field.datatable_field_uid]" :required="field.is_required" :disabled="field.is_readonly")
                                            template(v-else-if="field.moduleTableField.field_type == 'HourAndMinute'")
                                                input.form-control(type="text" v-model="newVO[field.datatable_field_uid]" :required="field.is_required" :disabled="field.is_readonly")
                                            template(v-else-if="field.moduleTableField.field_type == 'date'")
                                                input.form-control(type="date" v-model="newVO[field.datatable_field_uid]" :required="field.is_required" :disabled="field.is_readonly")
                                            template(v-else-if="field.moduleTableField.field_type == 'daterange'")
                                                input.form-control(type="text" v-model="newVO[field.datatable_field_uid]" :required="field.is_required" :disabled="field.is_readonly")
                                            template(v-else-if="field.moduleTableField.field_type == 'tsrange'")
                                                input.form-control(type="text" v-model="newVO[field.datatable_field_uid]" :required="field.is_required" :disabled="field.is_readonly")
                                            template(v-else-if="field.moduleTableField.field_type == 'timestamp'")
                                                input.form-control(type="number" v-model="newVO[field.datatable_field_uid]" :required="field.is_required" :disabled="field.is_readonly")
                                    template(v-else-if="field.type == 'ManyToOne'")
                                        .form-group
                                            label {{ t(field.translatable_title) }}
                                            multiselect(
                                                v-model="newVO[field.datatable_field_uid]", 
                                                :custom-label="field.voIdToHumanReadable",
                                                :options="select_options[field.datatable_field_uid]",
                                                :placeholder="t(field.translatable_place_holder)",
                                                :loading="isLoadingOptions[field.datatable_field_uid]",
                                                :id="field.datatable_field_uid",
                                                :searchable="true",
                                                :internal-search="false",
                                                @search-change="asyncLoadOptions")
                            template(v-else)
                                p {{ label('crud.create.modal.content.newvo_failure') }}
                        .modal-footer
                            input.btn.btn-default(type="button" data-dismiss="modal" :value="label('crud.create.modal.cancel')")
                            template(v-if="newVO")
                                input.btn.btn-primary(type="submit" :value="label('crud.create.modal.add')")
        <!-- Edit Modal HTML -->
        #updateData.modal.fade
            .modal-dialog
                .modal-content
                    form(v-on:submit.prevent="updateVO")
                        .modal-header
                            h4.modal-title {{ label('crud.update.modal.title') }}
                            button.close(type="button" data-dismiss="modal" aria-hidden="true") &times;
                        .modal-body
                            template(v-if="selectedVO && editableVO")
                                template(v-for="field in crud.updateDatatable.fields")
                                    template(v-if="field.type == 'Simple'")
                                        .form-group
                                            label {{ t(field.translatable_title) }}
                                            template(v-if="field.moduleTableField.field_type == 'text'")
                                                input.form-control(type="text" v-model="editableVO[field.datatable_field_uid]" :required="field.is_required" :disabled="field.is_readonly")
                                            template(v-else-if="field.moduleTableField.field_type == 'boolean'")
                                                input.form-control(type="checkbox" v-model="editableVO[field.datatable_field_uid]" :required="field.is_required" :disabled="field.is_readonly")
                                            template(v-else-if="field.moduleTableField.field_type == 'number'")
                                                input.form-control(type="number" v-model="editableVO[field.datatable_field_uid]" :required="field.is_required" :disabled="field.is_readonly")
                                            template(v-else-if="field.moduleTableField.field_type == 'float'")
                                                input.form-control(type="number" v-model="editableVO[field.datatable_field_uid]" :required="field.is_required" :disabled="field.is_readonly")
                                            template(v-else-if="field.moduleTableField.field_type == 'pct'")
                                                input.form-control(type="number" v-model="editableVO[field.datatable_field_uid]" :required="field.is_required" :disabled="field.is_readonly")
                                            template(v-else-if="field.moduleTableField.field_type == 'HourAndMinuteWithoutLimit'")
                                                input.form-control(type="text" v-model="editableVO[field.datatable_field_uid]" :required="field.is_required" :disabled="field.is_readonly")
                                            template(v-else-if="field.moduleTableField.field_type == 'HourAndMinute'")
                                                input.form-control(type="text" v-model="editableVO[field.datatable_field_uid]" :required="field.is_required" :disabled="field.is_readonly")
                                            template(v-else-if="field.moduleTableField.field_type == 'date'")
                                                input.form-control(type="date" v-model="editableVO[field.datatable_field_uid]" :required="field.is_required" :disabled="field.is_readonly")
                                            template(v-else-if="field.moduleTableField.field_type == 'daterange'")
                                                input.form-control(type="text" v-model="editableVO[field.datatable_field_uid]" :required="field.is_required" :disabled="field.is_readonly")
                                            template(v-else-if="field.moduleTableField.field_type == 'tsrange'")
                                                input.form-control(type="text" v-model="editableVO[field.datatable_field_uid]" :required="field.is_required" :disabled="field.is_readonly")
                                            template(v-else-if="field.moduleTableField.field_type == 'timestamp'")
                                                input.form-control(type="number" v-model="editableVO[field.datatable_field_uid]" :required="field.is_required" :disabled="field.is_readonly")
                                    template(v-else-if="field.type == 'ManyToOne'")
                                        .form-group
                                            label {{ t(field.translatable_title) }}
                                            multiselect(
                                                v-model="editableVO[field.datatable_field_uid]", 
                                                :custom-label="field.voIdToHumanReadable",
                                                :options="select_options[field.datatable_field_uid]",
                                                :placeholder="t(field.translatable_place_holder)",
                                                :loading="isLoadingOptions[field.datatable_field_uid]",
                                                :id="field.datatable_field_uid",
                                                :searchable="true",
                                                :internal-search="false",
                                                @search-change="asyncLoadOptions")
                            template(v-else)
                                p {{ label('crud.update.modal.content.selection_failure') }}
                        .modal-footer
                            input.btn.btn-default(type="button" data-dismiss="modal" :value="label('crud.update.modal.cancel')")
                            template(v-if="selectedVO && editableVO")
                                input.btn.btn-primary(type="submit" :value="label('crud.update.modal.save')")

        #deleteData.modal.fade
            .modal-dialog
                .modal-content
                    form(v-on:submit.prevent="deleteVO")
                        .modal-header
                            h4.modal-title {{ label('crud.delete.modal.title') }}
                            button.close(type="button" data-dismiss="modal" aria-hidden="true") &times;
                        .modal-body
                            template(v-if="selectedVO")
                                p {{ label('crud.delete.modal.content') }}
                                    .text-warning
                                        small {{ label('crud.delete.modal.content.warning') }}
                            template(v-else)
                                p {{ label('crud.delete.modal.content.selection_failure') }}
                        .modal-footer
                            input.btn.btn-default(type="button" data-dismiss="modal" :value="label('crud.delete.modal.cancel')")
                            template(v-if="selectedVO")
                                input.btn.btn-danger(type="submit" :value="label('crud.delete.modal.delete')")