.form-group(:class="{[field_type]:true, inline_input_mode:inline_input_mode, has_alert:(get_alerts && get_alerts[alert_path] && (get_alerts[alert_path].length > 0))}" @click='try_prepare_inline_input')

    Alertcomponent.datatable_field_alert.onetomany_datatable_field_alert(:path='alert_path')

    label(v-if="show_title") {{ label_replacement ? label(label_replacement) : t(field.translatable_title) }}
        //- template(v-if="field.is_required")
        //-     i.fa-duotone.fa-asterisk.mandatory

    .btn-group.link_ref(v-show='can_insert_or_update_target && show_insert_or_update_target')
        router-link.btn.btn-sm.btn-success(:to="getCRUDCreateLink(field.targetModuleTable.vo_type)" target='_blank')
            i.fa-duotone.fa-plus-circle

    template(v-if='field.can_use_async_load_options')
        multiselect(
            v-model="field_value",
            label="label"
            :options="filter_visible_options",
            :placeholder="t(placeholder_string)",
            :multiple="true"
            :close-on-select="false"
            autocomplete="off"
            :internal-search="false",
            :searchable="true",
            :preselect-first="false",
            :hide-selected="true"
            
            :id="field.datatable_field_uid",
            :allow-empty="!field.is_required",
            :disabled="is_readonly",


            @input="onChangeField",
            :loading="isLoadingOptions",
            


            :select-label='label("multiselect.selectLabel")'
            :select-group-label='label("multiselect.selectGroupLabel")'
            :selected-label='label("multiselect.selectedLabel")'
            :deselect-label='label("multiselect.deselectLabel")'
            :deselect-group-label='label("multiselect.deselectGroupLabel")'

            @search-change="query_update_visible_options"
        )

            span(slot="noOptions") -

            template(slot="option", slot-scope="props")
                span.option__title {{ props.option.label }}

            template(slot="tag", slot-scope="props")
                .pill_wrapper.bg-success
                    span.option__tag {{ props.option.label }}
                    i.fa-solid.fa-square-x(@click='props.remove(props.option)')

            //- ??? track-by="text_uid"

    template(v-else)
        multiselect(
            v-model="field_value",
            :custom-label="field.voIdToHumanReadable",
            :options="select_options",
            :placeholder="t(placeholder_string)",
            :loading="isLoadingOptions",
            autocomplete="off"
            :id="field.datatable_field_uid",
            :searchable="searchable",
            :internal-search="false",
            :allow-empty="!field.is_required",
            :preselect-first="false",
            :disabled="is_readonly",
            @search-change="asyncLoadOptions",
            @input="onChangeField",
            :multiple="true"
            :close-on-select="false"

            :select-label='label("multiselect.selectLabel")'
            :select-group-label='label("multiselect.selectGroupLabel")'
            :selected-label='label("multiselect.selectedLabel")'
            :deselect-label='label("multiselect.deselectLabel")'
            :deselect-group-label='label("multiselect.deselectGroupLabel")'
        )