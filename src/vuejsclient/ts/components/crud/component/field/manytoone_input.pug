.form-group(:class="{[field_type]:true, inline_input_mode:inline_input_mode, auto_validate_inline_input:auto_validate_inline_input, has_alert:(get_alerts && get_alerts[alert_path] && (get_alerts[alert_path].length > 0))}" @click='try_prepare_inline_input')

    template(v-if='inline_input_mode && (!is_disabled) && (!inline_input_mode_input_only) && (!auto_validate_inline_input)')
        template(v-if='!inline_input_is_editing')
            template(v-if='inline_input_show_clear && !field.is_required')
                i.inline_input_show_clear.fa.fa-trash.btn-danger(@click='inline_clear_value' :class="{busy: inline_input_is_busy}")
            template(v-else)
                i.inline_input_hide_clear.fa.fa-circle-arrow-right.btn-info(:class="{busy: inline_input_is_busy}")
        template(v-else)
            i.inline_input_cancel_input.fa.fa-undo.btn-warning(@click='cancel_input' :class="{busy: inline_input_is_busy}")

    Alertcomponent.datatable_field_alert.manytoone_datatable_field_alert(:path='alert_path')

    template(v-if='(!inline_input_mode) || (!inline_input_hide_label)')
        label(v-if="show_title") {{ label_replacement ? label(label_replacement) : t(field.translatable_title) }}
            template(v-if="field.is_required")
                i.fa-duotone.fa-asterisk.mandatory

    //- template(v-if='is_readonly')
    //- template(v-else)
    .btn-group.link_ref.hidden-print(v-show='can_insert_or_update_target && show_insert_or_update_target')
        template(v-if="field_value")
            a.btn.btn-sm.btn-primary.mr-1(@click="set_show_inline_form_in_crud(false)")
                i.fa-duotone.fa-pencil
        a.btn.btn-sm.btn-success(@click="set_show_inline_form_in_crud(true)")
            i.fa-duotone.fa-plus-circle

    template(v-if="!show_inline_form_in_crud || (show_inline_form_in_crud && !show_inline_form_in_crud_is_create)")
        template(v-if='field.can_use_async_load_options')
            multiselect(
                v-if='can_insert_or_update_target_first_loading_ok'
                
                :class="{'valign-middle': show_pencil_btn}"
                v-model="async_load_options_field_value",
                label="label"

                :options="filter_visible_options",
                :placeholder="t(placeholder_string)",
                :multiple="false"
                :close-on-select="true"
                autocomplete="off"
                :internal-search="false",
                :searchable="true",
                
                :id="field.datatable_field_uid",
                :allow-empty="!field.is_required",
                :disabled="is_readonly || (inline_input_mode && ((!inline_input_is_editing) || inline_input_is_busy))",


                @input="onChangeField",
                :loading="isLoadingOptions",
                
                track-by="id",

                :select-label='label("multiselect.selectLabel")'
                :select-group-label='label("multiselect.selectGroupLabel")'
                :selected-label='label("multiselect.selectedLabel")'
                :deselect-label='label("multiselect.deselectLabel")'
                :deselect-group-label='label("multiselect.deselectGroupLabel")'

                @search-change="query_update_visible_options"
            )

        template(v-else)
            multiselect(
                :class="{'valign-middle': show_pencil_btn}"
                v-model="async_load_options_field_value",
                label="label",
                :options="select_options",
                autocomplete="off"
                :placeholder="t(placeholder_string)",
                :loading="isLoadingOptions",
                :id="field.datatable_field_uid",
                :searchable="searchable",
                :internal-search="false",
                :allow-empty="!field.is_required",
                :preselect-first="field.is_required",
                :disabled="is_readonly || (inline_input_mode && ((!inline_input_is_editing) || inline_input_is_busy))",
                @search-change="asyncLoadOptions",
                @input="onChangeField"

                track-by="id",

                :select-label='label("multiselect.selectLabel")'
                :select-group-label='label("multiselect.selectGroupLabel")'
                :selected-label='label("multiselect.selectedLabel")'
                :deselect-label='label("multiselect.deselectLabel")'
                :deselect-group-label='label("multiselect.deselectGroupLabel")'
            )

            include ./CRUDComponentFieldFooter