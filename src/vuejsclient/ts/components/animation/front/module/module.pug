
.rootElt.module_container
    template(v-if="theme && anim_module")
        template(v-if="has_access_inline_input_mode")
            .text-right
                toggle-button(
                    @change="set_inline_input_mode"
                    :value="inline_input_mode"
                    :sync="true"
                    :width="200"
                    :labels="{checked: label('animation.inline_input_mode.on'), unchecked: label('animation.inline_input_mode.off')}"
                )

        h1
            template(v-if="inline_input_mode")
                span
                    Crudcomponentfield(
                        :field="name_theme_editable_field",
                        :vo="theme",
                        :show_insert_or_update_target="false",
                        :auto_update_field_value='true',
                        :inline_input_mode="inline_input_mode"
                        :inline_input_show_clear="false"
                        :show_title="false"
                    )
                span
                    Crudcomponentfield(
                        :field="name_module_editable_field",
                        :vo="anim_module",
                        :show_insert_or_update_target="false",
                        :auto_update_field_value='true',
                        :inline_input_mode="inline_input_mode"
                        :inline_input_show_clear="false"
                        :show_title="false"
                    )

            template(v-else)
                span {{ theme.name }} : {{ anim_module.name }}

        template(v-if="ordered_qrs && ordered_qrs.length > 0")
            .questions.text-center
                template(v-if="current_qr")
                    .current_qr.d-ib {{ label('animation.question') }}
                    b.d-ib.ml-1
                        template(v-if="!show_recap")
                            span {{ current_qr.weight }} / {{ ordered_qrs.length }}
                .switch_questions
                    template(v-for="qr in ordered_qrs")
                        .question(@click="switchQR(qr)", :class="{active: (!show_recap && current_qr && current_qr.id == qr.id), 'fa fa-check': (qr && uqr_by_qr_ids[qr.id] && uqr_by_qr_ids[qr.id].id && is_reponse_valid[qr.id]), 'fa fa-times': (qr && uqr_by_qr_ids[qr.id] && uqr_by_qr_ids[qr.id].id && !is_reponse_valid[qr.id])}")

                    i.fa.fa-trophy.question(@click="show_recap_toggle", :class="{active: show_recap, actif: recap_is_actif}")

            template(v-if="current_qr && !show_recap")
                Animationqr(
                    :qr="current_qr",
                    :uqr="uqr_by_qr_ids[current_qr.id]",
                    :logged_user_id="logged_user_id",
                    :question_file="file_by_ids[current_qr.question_file_id]",
                    :reponse_file="file_by_ids[current_qr.reponse_file_id]",
                    :inline_input_mode="inline_input_mode",
                    @reload="reloadUqrs",
                    @next="nextQr"
                )

            template(v-else-if="show_recap")
                .prct_reussite.text-center
                    h2 {{ label('animation.prct_reussite') }}

                    .c100(:class="prct_reussite_class")
                        span
                            var-data(
                                v-var-directive="prct_reussite_module_directive",
                                :var_param="prct_reussite_module_param",
                                :filter='const_filters.percent.read',
                                :filter_additional_params='[]',
                            )
                        .slice
                            .bar
                            .fill

                    template(v-if="prct_reussite_value != null")
                        .is_validated
                            template(v-if="is_module_valide")
                                .ok
                                    i.far.fa-smile.mr-2
                                    span {{ label('animation.qr.is_validated.ok') }}
                            template(v-else)
                                .nok
                                    i.far.fa-surprise.mr-2
                                    span {{ label('animation.qr.is_validated.nok') }}

                    .prct_reussite_message.text-center(v-if="prct_reussite_message", v-html="prct_reussite_message")

                    template(v-if="prct_reussite_value != null")
                        .retour_formations.next
                            template(v-if="is_module_valide")
                                i.fa.fa-long-arrow-right(@click="goToFeedback")

                            template(v-else)
                                template(v-if="document")
                                    a.document_module(:href="document.document_url", target="_blank")
                                        i.fa.fa-long-arrow-right
                                        span {{ label('animation.module.document') }}

                                .btn.btn-success.mt-2(@click="backToFront") {{ label('animation.retour_formations') }}


    .modal.fade.in(ref="restartmodulemodal", tabindex='-1', role='dialog')
        .modal-dialog.modal-sm#restartmodulemodal(role='document')
            .modal-content
                .modal-header
                    .close(@click="closeModal(false)") Ã—
                    div {{ label('animation.modal.restart_module.title') }}

                .modal-body
                    div {{ label('animation.modal.restart_module.body') }}

                .modal-footer.text-center
                    .btn.btn-info(type="submit", @click="closeModal(false)") {{ label('animation.modal.restart_module.consulter') }}
                    .btn.btn-success(type="submit", @click="closeModal(true)") {{ label('animation.modal.restart_module.restart') }}
