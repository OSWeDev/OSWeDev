//- Crudcomponentfield utilisé pour l'édition de la qr

.rootElt.qr.text-center
    template(v-if="qr")
        template(v-if="inline_input_mode")
            //- type de question
            Crudcomponentfield(
                :field="name_editable_field",
                :vo="qr",
                :show_insert_or_update_target="false",
                :auto_update_field_value='true',
                :inline_input_mode="inline_input_mode"
                :inline_input_show_clear="false"
                :show_title="false"
            )

            //- la question
            Crudcomponentfield(
                :field="description_editable_field",
                :vo="qr",
                :show_insert_or_update_target="false",
                :auto_update_field_value='true',
                :inline_input_mode="inline_input_mode"
                :inline_input_show_clear="false"
                :show_title="false"
            )
        //- type (quizz, vrai/faux..) et la question
        template(v-else)
            h2 {{ qr.name }}

            .description_qr(v-if="qr.description", v-html="qr.description")

        //- image ou video
        .qr_file(v-if="!is_validated")
            template(v-if="question_file")
                template(v-if="get_is_image(question_file)")
                    img.clickable(:src="question_file.path", @click="showModal(true, question_file)")
                template(v-if="get_is_video(question_file)")
                    video(controls)
                        source(:src="question_file.path" type="video/mp4")

            template(v-if="qr.external_video")
                iframe(:style="style_iframe" :src="qr.external_video + '?rel=0'" allow="autoplay; encrypted-media" allowfullscreen="false")

        //- smiley + réponses 
        template(v-if="ordered_reponses && ordered_reponses.length > 0")
            .reponses
                template(v-if="is_validated")
                    //- smiley
                    .is_validated
                        template(v-if="is_reponse_valid")
                            .ok
                                i.far.fa-smile.mr-2
                                span {{ label('animation.qr.is_validated.ok') }}
                        template(v-else)
                            .nok
                                i.far.fa-surprise.mr-2
                                span {{ label('animation.qr.is_validated.nok') }}

                table

                    //- différentiation des réponses attendues de celles de l'utilisateur si question déjà répondue
                    thead
                        tr
                            th(v-show="is_validated") {{ label('animation.reponse.valid') }}
                            th(v-show="is_validated") {{ label('animation.reponse.votre_reponse') }}
                            th(v-show="is_validated")

                    //- réponses 
                    tbody
                        template(v-for="(reponse, index) in ordered_reponses")
                            tr.reponse(v-if="reponse.name")
                                //- checkbox des réponses attendues si question déjà faite
                                td.valid(v-show="is_validated")
                                    input(:disabled="true", type="checkbox", :checked="reponse.valid", :class="classe_reponses[reponse.id]")
                                //- checkbox des réponses de l'utilisateur
                                td
                                    input(:disabled="is_validated", v-model="selected_reponse[reponse.id]", type="checkbox", :id="'reponse_' + index", :class="classe_reponses[reponse.id]")
                                
                                //- le texte de la réponse
                                td.text-left
                                    template(v-if="inline_input_mode")
                                        Crudcomponentfield(
                                            :field="name_editable_field",
                                            :vo="reponse",
                                            :show_insert_or_update_target="false",
                                            :auto_update_field_value='false',
                                            :inline_input_mode="inline_input_mode"
                                            :inline_input_show_clear="false"
                                            :show_title="false",
                                            @onchangevo="on_edit_reponse_name"
                                        )
                                    template(v-else)
                                        label.text-left(:for="'reponse_' + index") {{ reponse.name }}

            .validation
                //- bouton sauvegarde ou spinner si en cours de validation
                template(v-if="!is_validated")
                    template(v-if="!saving")
                        .btn-container
                            .btn(@click="validation", :disabled="is_disabled") {{ label('animation.validation') }}
                    template(v-else)
                        i.loadingspinner.fa.fa-spinner.fa-spin(aria-hidden="true")

                //- sinon explication de la question et bouton pour question suivante
                template(v-else)

                    //- image ou video
                    .qr_file
                        template(v-if="reponse_file")
                            template(v-if="get_is_image(reponse_file)")
                                img.clickable(:src="reponse_file.path", @click="showModal(true, reponse_file)")
                            template(v-if="get_is_video(reponse_file)")
                                video(controls)
                                    source(:src="reponse_file.path" type="video/mp4")

                    //- explication texte
                    template(v-if="inline_input_mode")
                        Crudcomponentfield(
                            :field="explicatif_editable_field",
                            :vo="qr",
                            :show_insert_or_update_target="false",
                            :auto_update_field_value='true',
                            :inline_input_mode="inline_input_mode"
                            :inline_input_show_clear="false"
                            :show_title="false"
                        )
                    template(v-else)
                        .explication(v-if="qr.explicatif", v-html="qr.explicatif")
                    
                    //- bouton next
                    .next
                        i.fa-solid.fa-long-arrow-right(@click="next")


    .modal.imagezoommodal.fade.in(ref="imagezoommodal", tabindex='-1', role='dialog')
        .modal-dialog.modal-sm#imagezoommodal(role='document')
            .modal-content
                .modal-body
                    .rotate
                        .close(@click="showModal(false, null)") ×
                        template(v-if="selected_file")
                            template(v-if="get_is_image(selected_file)")
                                img(:src="selected_file.path", :style="style_image")
