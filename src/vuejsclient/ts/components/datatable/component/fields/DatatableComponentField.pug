.field(:field_name="field.datatable_field_uid")
    template(v-if='!field.hidden')
        template(v-if="show_label")
            span {{ t(field.translatable_title) }} : 
        template(v-if="field.type == 'Simple'")
            template(v-if="field.moduleTableField.field_type == 'boolean'")
                template(v-if="field_value == 'true'")
                    i.fa.fa-check
                template(v-if="field_value == 'false'")
                    i.fa.fa-close
            template(v-else-if="field.moduleTableField.field_type == 'password'")
                i.fa.fa-lock
            template(v-else-if="field.moduleTableField.field_type == 'number[]'")
                ul.multi-input(v-if="field_value")
                    li(v-for="value in field_value") {{ value }}

            template(v-else-if="field.moduleTableField.field_type == 'text[]'")
                ul.multi-input(v-if="field_value")
                    li(v-for="value in field_value") {{ value }}
            template(v-else-if="field.moduleTableField.field_type == 'html[]'")
                ul.multi-input(v-if="field_value")
                    li(v-for="value in field_value")
                        code {{ value }}
            template(v-else-if="field.moduleTableField.field_type == 'html'")
                code {{ field_value }}
            template(v-else-if="field.moduleTableField.field_type == 'enum'")
                span(:class="transliterate_enum_value_to_class_name") {{ field_value }}
            template(v-else-if="is_custom_field_type && custom_field_types.read_component")
                .custom_read_field_component(:is="custom_field_types.read_component" :row='vo' :value='field_value')
            template(v-else-if="field.moduleTableField.field_type == 'textarea'")
                pre {{ field_value }}
            template(v-else)
                span {{ field_value }}
        template(v-else-if="field.type == 'ManyToOne'")
            template(v-if="field_value")
                template(v-if="routeExists(getCRUDUpdateLink(field.targetModuleTable.vo_type, vo[field.datatable_field_uid + '___id___']))")
                    router-link.btn.btn-sm.btn-info.many_to_one(:to="getCRUDUpdateLink(field.targetModuleTable.vo_type, vo[field.datatable_field_uid + '___id___'])" target='_blank')
                        img(src='/vuejsclient/public/img/many_to_one.svg')
                        | {{ field_value }}
                       
                template(v-else)
                    span {{ field_value }}
        template(v-else-if="(field.type == 'ManyToMany') || (field.type == 'OneToMany') || (field.type == 'RefRanges')")
            template(v-if="field_value")
                template(v-for="e in field_value")
                    template(v-if="routeExists(getCRUDUpdateLink(field.targetModuleTable.vo_type, e.id))")
                        router-link.many-router-links.btn.btn-sm.btn-info(:class='["many_to_many", "one_to_many"][field.type == "ManyToMany" ? 0 : 1]' :to="getCRUDUpdateLink(field.targetModuleTable.vo_type, e.id)" target='_blank')
                            img(:src='["/vuejsclient/public/img/many_to_many.svg", "/vuejsclient/public/img/one_to_many.svg"][field.type == "ManyToMany" ? 0 : 1]')
                            | {{ e.label }}
                    template(v-else)
                        span {{ e.label }}

        template(v-else-if="field.type == 'COMPONENT'")
            div(:is="field.component" :vo="vo" :param="vo[field.parameter_datatable_field_uid]" :param_ref_id="vo[field.parameter_datatable_field_uid + '___id___']")

        template(v-else-if="field.type == 'FILE'")
            Filedatatablefieldcomponent(:file_id="vo[field.parameter_datatable_field_uid]")

        template(v-else)
            span {{ field_value }}