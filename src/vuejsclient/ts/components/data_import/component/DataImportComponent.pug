include ../../../../views/mixins/loading.pug

.data-import.col-md-12
    +loading()
        .row
            .col-md-12
                h2.imports_page_title {{ title }}
        .row(v-if='import_overview_component')
            .col-md-12
                component(:is="import_overview_component")

        .row(v-if='import_param_component')
            .col-md-12
                component(:is="import_param_component")

        .row.justify-content-between
            .col-md-1
                button.btn.btn-primary.pull-left(@click="previous_segments")
                    i.fa.fa-arrow-left(aria-hidden="true")
            .col-md-1
                button.btn.btn-primary.pull-right(@click="next_segments")
                    i.fa.fa-arrow-right(aria-hidden="true")
        .row.justify-content-between.segments_overviews
            template(v-for='segment in segments')
                template(v-if="segment_states && segment && segment_states[segment.dateIndex]")
                    .col-sm.border-top.rounded-top.border-secondary.data_import_segment_overview(v-if='segment_states[segment.dateIndex] == segment_state_unavail')

                        .segment_date_index(v-if='segment_type == "year"') {{ formatDate_Fullyear(segment.dateIndex) }}
                        .segment_date_index(v-if='segment_type == "month"') {{ formatDate_FullyearMonth(segment.dateIndex) }}
                        .segment_date_index(v-if='segment_type == "day"') {{ formatDate_FullyearMonthDay(segment.dateIndex) }}

                    .col-sm.border-top.rounded-top.data_import_segment_overview(v-else, 
                        :class='{"border-success": segment_states[segment.dateIndex] == segment_state_ok, "border-danger": segment_states[segment.dateIndex] == segment_state_ko, "border-warning": segment_states[segment.dateIndex] == segment_state_warn, "border-primary": segment_states[segment.dateIndex] == segment_state_info}')

                        .segment_date_index(v-if='segment_type == "year"') {{ formatDate_Fullyear(segment.dateIndex) }}
                        .segment_date_index(v-if='segment_type == "month"') {{ formatDate_FullyearMonth(segment.dateIndex) }}
                        .segment_date_index(v-if='segment_type == "day"') {{ formatDate_FullyearMonthDay(segment.dateIndex) }}

                        i.fa.fa-info-circle.fa-5x(aria-hidden="true" @click='openModal(segment)')
                        fileinput(:muted="true" :options="dropzoneOptions[segment.dateIndex]" @uploaded="uploadedFile(segment.dateIndex, ...arguments)")

        #import_modal.modal.fade
            .modal-dialog
                .modal-content
                    .modal-header(v-if="selected_segment")
                        h4.modal-title {{ selected_segment.dateIndex }}
                        router-link.btn.close(:to="route_path") &times;
                    .modal-body(v-if="selected_segment && (!import_historics[selected_segment.dateIndex])")
                        span {{ label('import.modal.no_hisotoric') }}
                    .modal-body(v-if="selected_segment && import_historics[selected_segment.dateIndex]")
                        .row.imported_file_link
                            .col-md-12
                                span {{ label('import.modal.imported_file_link') }}
                                fileinput.pull-right(:readonly="true" :filevo='imported_files[selected_segment.dateIndex]')
                        .row(v-for='api_type_id in api_type_ids')
                            .jumbotron.col-md-12
                                p.lead.import_title {{ selected_segment_labels[api_type_id] }}
                                router-link.btn.btn-sm.btn-primary(:to="logs_path[selected_segment.dateIndex][api_type_id]" target="_blank")
                                    i.fa.fa-info-circle(aria-hidden="true")
                                    span {{ label('import.modal.see_logs') }}
                                hr
                                p.justify-content-between.align-items-left
                                    span.badge.badge-success.badge-spill.pull-right(v-if='selected_segment_format_validated[api_type_id]')
                                        i.fa.fa-check(aria-hidden="true")
                                    span.badge.badge-danger.badge-spill.pull-right(v-if='selected_segment_format_invalidated[api_type_id]')
                                        i.fa.fa-times(aria-hidden="true")
                                    p {{ label('import.format.modal.title') }}
                                ul.list-group(v-if="selected_segment_has_formatted_datas[api_type_id]")
                                    i.fa.fa-spinner.fa-spin(v-if="!selected_segment_nb_validated_format_elements")
                                    router-link.list-group-item.list-group-item-action.d-flex.justify-content-between.align-items-center(:to="raw_datas_path[selected_segment.dateIndex][api_type_id]" target="_blank" v-if="selected_segment_nb_validated_format_elements")
                                        span {{ label('import.format.modal.selected_segment_nb_validated_format_elements') }}
                                        span.badge.badge-success.badge-spill {{ selected_segment_nb_validated_format_elements[api_type_id] }}
                                    i.fa.fa-spinner.fa-spin(v-if="!selected_segment_nb_unvalidated_format_elements")
                                    router-link.list-group-item.list-group-item-action.d-flex.justify-content-between.align-items-center(:to="raw_datas_path[selected_segment.dateIndex][api_type_id]" target="_blank" v-if="selected_segment_nb_unvalidated_format_elements")
                                        span {{ label('import.format.modal.selected_segment_nb_unvalidated_format_elements') }}
                                        span.badge.badge-danger.badge-spill {{ selected_segment_nb_unvalidated_format_elements[api_type_id] }}
                                template(v-if='selected_segment_needs_format_validation[api_type_id]')
                                    button.btn.btn-primary(@click="selected_segment_continue_importation(api_type_id)")
                                        i.fa.fa-check(aria-hidden="true") {{ label('import.format.modal.continue') }}
                                    button.btn.btn-secondary(@click="selected_segment_cancel_importation(api_type_id)")
                                        i.fa.fa-check(aria-hidden="true") {{ label('import.format.modal.cancel') }}

                                hr
                                p.justify-content-between.align-items-left
                                    span.badge.badge-danger.badge-spill.pull-right(v-if='selected_segment_import_failed[api_type_id]')
                                        i.fa.fa-times(aria-hidden="true")
                                    span.badge.badge-success.badge-spill.pull-right(v-if='selected_segment_imported[api_type_id]')
                                        i.fa.fa-check(aria-hidden="true")
                                    p {{ label('import.import.modal.title') }}
                                    
                                hr
                                p.justify-content-between.align-items-left
                                    span.badge.badge-success.badge-spill.pull-right(v-if='selected_segment_posttreated[api_type_id]')
                                        i.fa.fa-check(aria-hidden="true")
                                    span.badge.badge-danger.badge-spill.pull-right(v-if='selected_segment_posttreat_failed[api_type_id]')
                                        i.fa.fa-times(aria-hidden="true")
                                    p {{ label('import.posttreat.modal.title') }}
                                    