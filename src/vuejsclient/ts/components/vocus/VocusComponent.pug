.vocus
    .row
        .col-md-6
            v-select(v-model="tmp_vo_type" :options="vo_types" :placeholder="label('vocus.vo_type')")
        .col-md-6
            input(type="number" v-model="tmp_vo_id" :placeholder="label('vocus.id')")
    .row(v-if='vo && !is_loading')
        .col-md-12
            table.table.table-condensed.table-striped.vocus_datatable
                thead
                    tr
                        th.vocus_type {{ label('vocus.vo_type') }}
                        th.vocus_id {{ label('vocus.id') }}
                        th.vocus_label {{ label('vocus.label') }}
                        th.vocus_crud {{ label('vocus.crud') }}
                        
                tbody
                    tr.srcvo
                        td.vocus_type {{ vo._type }}
                        td.vocus_id {{ vo.id }}
                        td.vocus_label {{ vo_label }}
                        td.vocus_crud
                            .btn-group.d-print-none
                                router-link.btn.btn-sm.btn-primary.m-1(:to="getCRUDUpdateLink(vo._type, vo.id)")
                                    i.fa.fa-pencil
                                router-link.btn.btn-sm.btn-secondary.m-1(:to="getVocusLink(vo._type, vo.id)")
                                    i.fa.fa-search
                                router-link.btn.btn-sm.btn-danger.m-1(:to="getCRUDDeleteLink(vo._type, vo.id)")
                                    i.fa.fa-trash

                    tr.refvo(v-for='refvo in refvos' :class='{"is_cascade": refvo.is_cascade}')
                        td.vocus_type {{ refvo.linked_type }}
                        td.vocus_id {{ refvo.linked_id }}
                        td.vocus_label {{ refvo.linked_label }}
                        td.vocus_crud
                            .btn-group.d-print-none
                                router-link.btn.btn-sm.btn-primary.m-1(:to="getCRUDUpdateLink(refvo.linked_type, refvo.linked_id)")
                                    i.fa.fa-pencil
                                router-link.btn.btn-sm.btn-secondary.m-1(:to="getVocusLink(refvo.linked_type, refvo.linked_id)")
                                    i.fa.fa-search
                                router-link.btn.btn-sm.btn-danger.m-1(:to="getCRUDDeleteLink(refvo.linked_type, refvo.linked_id)")
                                    i.fa.fa-trash
    .row(v-if='limit1000')
        .col-md-12
            .limit1000 {{ label('vocus.limit1000') }}