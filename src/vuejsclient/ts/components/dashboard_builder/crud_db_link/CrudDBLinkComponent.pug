.crud_db_link
    template(v-if='(!vo_type_options) || !vo_type_options.length')
        .crud_db_link_api_type_id
            .input_label {{ label('crud_db_link.no_api_type_is_available') }}
    template(v-else)

        //- public moduletable_crud_template_type: number = DashboardVO.MODULE_TABLE_CRUD_TEMPLATE_TYPE_CONSULTATION;
        //- public moduletable_crud_template_saisie_mode: number = DashboardVO.MODULE_TABLE_CRUD_TEMPLATE_SAISIE_MODE_CREATE_UPDATE;



        .crud_db_link_api_type_id
            .input_label {{ label('crud_db_link.crud_db_link_api_type_id') }}

            .input_wrapper
                multiselect(
                    :preselect-first="false"
                    :multiple="false"
                    v-model="selected_vo_type"
                    :placeholder="label('crud_db_link.crud_db_link_api_type_id.placeholder')"
                    :options="vo_type_options"
                    :custom-label="vo_type_label"
                    :allow-empty="true",
                    autocomplete="off"

                    :searchable="true"
                    :internal-search="true"

                    id="crud_db_link_api_type_id"

                    :select-label='label("multiselect.selectLabel")'
                    :select-group-label='label("multiselect.selectGroupLabel")'
                    :selected-label='label("multiselect.selectedLabel")'
                    :deselect-label='label("multiselect.deselectLabel")'
                    :deselect-group-label='label("multiselect.deselectGroupLabel")'

                    :disabled="!POLICY_DBB_CAN_UPDATE_CRUD_TYPE"
                )

        .switch_type_template(v-if='selected_vo_type')
            .input_label {{ label('crud_db_link.switch_type_template') }}
            
                //- get moduletable_crud_template_type_options(): { id: number, label: string }[] {
                //-     return DashboardVO.MODULE_TABLE_CRUD_TEMPLATE_TYPE_LABELS.map((label: string, index: number) => {
                //-         return { id: index, label: this.t(label) };
                //-     });
                //- }

            .input_wrapper
                multiselect(
                    v-model="moduletable_crud_template_type"
                    :options="moduletable_crud_template_type_options"
                    :multiple="false"
                    :preselect-first="true"
                    :placeholder="label('crud_db_link.switch_type_template.placeholder')"
                    :track-by="'id'"
                    :label="'label'"
                    :allow-empty="false"

                    :select-label='label("multiselect.selectLabel")'
                    :select-group-label='label("multiselect.selectGroupLabel")'
                    :selected-label='label("multiselect.selectedLabel")'
                    :deselect-label='label("multiselect.deselectLabel")'
                    :deselect-group-label='label("multiselect.deselectGroupLabel")'

                    id="switch_type_template"
                )

        .switch_type_saisie(v-if='selected_vo_type && (moduletable_crud_template_type?.id == type_saisie)')
            .input_label {{ label('crud_db_link.switch_type_saisie') }}
            
                //- get moduletable_crud_template_type_options(): { id: number, label: string }[] {
                //-     return DashboardVO.MODULE_TABLE_CRUD_TEMPLATE_TYPE_LABELS.map((label: string, index: number) => {
                //-         return { id: index, label: this.t(label) };
                //-     });
                //- }

            .input_wrapper
                multiselect(
                    v-model="moduletable_crud_template_saisie_mode"
                    :options="moduletable_crud_template_saisie_mode_options"
                    :multiple="false"
                    :preselect-first="true"
                    :placeholder="label('crud_db_link.switch_type_saisie.placeholder')"
                    :track-by="'id'"
                    :label="'label'"
                    :allow-empty="false"

                    :select-label='label("multiselect.selectLabel")'
                    :select-group-label='label("multiselect.selectGroupLabel")'
                    :selected-label='label("multiselect.selectedLabel")'
                    :deselect-label='label("multiselect.deselectLabel")'
                    :deselect-group-label='label("multiselect.deselectGroupLabel")'

                    id="switch_type_saisie"
                )

        //- get moduletable_crud_template_saisie_mode_options(): { id: number, label: string }[] {
        //-     return DashboardVO.MODULE_TABLE_CRUD_TEMPLATE_SAISIE_MODE_LABELS.map((label: string, index: number) => {
        //-         return { id: index, label: this.t(label) };
        //-     });
        //- }


        //- .switch_option_template_create(v-if='selected_vo_type && option_formulaire')
        //-     .input_label {{ label('crud_db_link.switch_option_template_create') }}
            
        //-     toggle-button(
        //-         @change="switch_option_template_create" 
        //-         :value="option_template_create" 
        //-         :sync="true"
        //-         :width="100"
        //-         :labels="{checked: label('crud_db_link.switch_option_template_create.on'), unchecked: label('crud_db_link.switch_option_template_create.off')}"
        //-         :disabled="!POLICY_DBB_CAN_UPDATE_IS_TEMPLATE_CREATE"
        //-     )

        //- .switch_option_template_read(v-if='selected_vo_type')
        //-     .input_label {{ label('crud_db_link.switch_option_template_read') }}
            
        //-     toggle-button(
        //-         @change="switch_option_template_read" 
        //-         :value="option_template_read" 
        //-         :sync="true"
        //-         :width="100"
        //-         :labels="{checked: label('crud_db_link.switch_option_template_read.on'), unchecked: label('crud_db_link.switch_option_template_read.off')}"
        //-         :disabled="!POLICY_DBB_CAN_UPDATE_IS_TEMPLATE_READ"
        //-     )

        //- .switch_option_template_update(v-if='selected_vo_type && option_formulaire')
        //-     .input_label {{ label('crud_db_link.switch_option_template_update') }}
            
        //-     toggle-button(
        //-         @change="switch_option_template_update" 
        //-         :value="option_template_update" 
        //-         :sync="true"
        //-         :width="100"
        //-         :labels="{checked: label('crud_db_link.switch_option_template_update.on'), unchecked: label('crud_db_link.switch_option_template_update.off')}"
        //-         :disabled="!POLICY_DBB_CAN_UPDATE_IS_TEMPLATE_UPDATE"
        //-     )