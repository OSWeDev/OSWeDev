.table_widget_options_component
    .widget_title(v-if='title_name_code_text')
        .widget_title_label {{ label('table_widget_options_component.widget_title.title_name_code_text') }}
        .widget_title_wrapper
            Inlinetranslatabletext(
                :code_text="title_name_code_text" 
                :is_editable="true"
                :default_translation="default_title_translation")

    .crud_api_type_id
        .input_label {{ label('table_widget_options_component.crud_api_type_id') }}

        .crud_api_type_id_select
            .input_wrapper
                multiselect(
                    :preselect-first="false"
                    :multiple="false"
                    v-model="crud_api_type_id_selected"
                    :placeholder="label('table_widget_options_component.crud_api_type_id_select')"
                    :options="crud_api_type_id_select_options"
                    :custom-label="crud_api_type_id_select_label"
                    :allow-empty="true",
                    autocomplete="off"

                    :searchable="true"
                    :internal-search="true"

                    id="crud_api_type_id_select"

                    :select-label='label("multiselect.selectLabel")'
                    :select-group-label='label("multiselect.selectGroupLabel")'
                    :selected-label='label("multiselect.selectedLabel")'
                    :deselect-label='label("multiselect.deselectLabel")'
                    :deselect-group-label='label("multiselect.deselectGroupLabel")'
                )


    .limit
        .input_label {{ label('table_widget_options_component.limit') }}
        .input_wrapper
            input(
                type="number"
                v-model.number="limit"
            )

    .use_kanban_by_default_if_exists
        .input_label {{ label('table_widget_options_component.use_kanban_by_default_if_exists') }}
        toggle-button(
            @change="switch_use_kanban_by_default_if_exists" 
            :value="use_kanban_by_default_if_exists" 
            :sync="true"
            :width="100"
            :labels="{checked: label('table_widget_options_component.use_kanban_by_default_if_exists.true'), unchecked: label('table_widget_options_component.use_kanban_by_default_if_exists.false')}")

    .use_kanban_card_archive_if_exists
        .input_label {{ label('table_widget_options_component.use_kanban_card_archive_if_exists') }}
        toggle-button(
            @change="switch_use_kanban_card_archive_if_exists" 
            :value="use_kanban_card_archive_if_exists" 
            :sync="true"
            :width="100"
            :labels="{checked: label('table_widget_options_component.use_kanban_card_archive_if_exists.true'), unchecked: label('table_widget_options_component.use_kanban_card_archive_if_exists.false')}")

    .use_kanban_column_weight_if_exists
        .input_label {{ label('table_widget_options_component.use_kanban_column_weight_if_exists') }}
        toggle-button(
            @change="switch_use_kanban_column_weight_if_exists" 
            :value="use_kanban_column_weight_if_exists" 
            :sync="true"
            :width="100"
            :labels="{checked: label('table_widget_options_component.use_kanban_column_weight_if_exists.true'), unchecked: label('table_widget_options_component.use_kanban_column_weight_if_exists.false')}")

    .show_pagination_resumee
        .input_label {{ label('table_widget_options_component.show_pagination_resumee') }}
        toggle-button(
            @change="switch_show_pagination_resumee" 
            :value="show_pagination_resumee" 
            :sync="true"
            :width="100"
            :labels="{checked: label('table_widget_options_component.show_pagination_resumee.visible'), unchecked: label('table_widget_options_component.show_pagination_resumee.hidden')}")

    .show_pagination_slider
        .input_label {{ label('table_widget_options_component.show_pagination_slider') }}
        toggle-button(
            @change="switch_show_pagination_slider" 
            :value="show_pagination_slider" 
            :sync="true"
            :width="100"
            :labels="{checked: label('table_widget_options_component.show_pagination_slider.visible'), unchecked: label('table_widget_options_component.show_pagination_slider.hidden')}")

    .show_pagination_form
        .input_label {{ label('table_widget_options_component.show_pagination_form') }}
        toggle-button(
            @change="switch_show_pagination_form" 
            :value="show_pagination_form" 
            :sync="true"
            :width="100"
            :labels="{checked: label('table_widget_options_component.show_pagination_form.visible'), unchecked: label('table_widget_options_component.show_pagination_form.hidden')}")

    .show_pagination_list
        .input_label {{ label('table_widget_options_component.show_pagination_list') }}
        toggle-button(
            @change="switch_show_pagination_list" 
            :value="show_pagination_list" 
            :sync="true"
            :width="100"
            :labels="{checked: label('table_widget_options_component.show_pagination_list.visible'), unchecked: label('table_widget_options_component.show_pagination_list.hidden')}")

    template(v-if='show_pagination_list')
        .nbpage_pagination_list
            .input_label {{ label('table_widget_options_component.nbpage_pagination_list') }}
            .input_wrapper
                input(
                    type="number"
                    v-model.number="tmp_nbpages_pagination_list"
                )

    .hide_pagination_bottom
        .input_label {{ label('table_widget_options_component.hide_pagination_bottom') }}
        toggle-button(
            @change="switch_hide_pagination_bottom" 
            :value="hide_pagination_bottom" 
            :sync="true"
            :width="100"
            :labels="{checked: label('table_widget_options_component.hide_pagination_bottom.visible'), unchecked: label('table_widget_options_component.hide_pagination_bottom.hidden')}")


    .has_table_total_footer
        .input_label {{ label('table_widget_options_component.has_table_total_footer') }}
        toggle-button(
            @change="switch_has_table_total_footer" 
            :value="has_table_total_footer" 
            :sync="true"
            :width="100"
            :labels="{checked: label('table_widget_options_component.has_table_total_footer.visible'), unchecked: label('table_widget_options_component.has_table_total_footer.hidden')}")        

    .show_limit_selectable
        .input_label {{ label('table_widget_options_component.show_limit_selectable') }}
        toggle-button(
            @change="switch_show_limit_selectable" 
            :value="show_limit_selectable" 
            :sync="true"
            :width="100"
            :labels="{checked: label('table_widget_options_component.show_limit_selectable.visible'), unchecked: label('table_widget_options_component.show_limit_selectable.hidden')}")

    .can_apply_default_field_filters_without_validation
        .input_label {{ label('table_widget_options_component.can_apply_default_field_filters_without_validation') }}
        toggle-button(
            @change="toggle_can_apply_default_field_filters_without_validation" 
            :value="can_apply_default_field_filters_without_validation" 
            :sync="true"
            :width="100"
            :labels="{checked: label('crud.field.boolean.true'), unchecked: label('crud.field.boolean.false')}" 
        )

    template(v-if="show_limit_selectable")
        .limit_selectable
            .input_label {{ label('table_widget_options_component.limit_selectable') }}
            .input_wrapper
                input(
                    type="text"
                    v-model="limit_selectable"
                )

    .create_button(v-if='widget_options && widget_options.crud_api_type_id')
        .input_label {{ label('table_widget_options_component.create_button') }}

        toggle-button(
            @change="switch_create_button" 
            :value="create_button" 
            :sync="true"
            :width="100"
            :labels="{checked: label('table_widget_options_component.create_button.visible'), unchecked: label('table_widget_options_component.create_button.hidden')}")

    .update_button(v-if='widget_options && widget_options.crud_api_type_id')
        .input_label {{ label('table_widget_options_component.update_button') }}

        toggle-button(
            @change="switch_update_button" 
            :value="update_button" 
            :sync="true"
            :width="100"
            :labels="{checked: label('table_widget_options_component.update_button.visible'), unchecked: label('table_widget_options_component.update_button.hidden')}")

    .delete_button(v-if='widget_options && widget_options.crud_api_type_id')
        .input_label {{ label('table_widget_options_component.delete_button') }}

        toggle-button(
            @change="switch_delete_button" 
            :value="delete_button" 
            :sync="true"
            :width="100"
            :labels="{checked: label('table_widget_options_component.delete_button.visible'), unchecked: label('table_widget_options_component.delete_button.hidden')}")

    .delete_all_button(v-if='widget_options && widget_options.crud_api_type_id')
        .input_label {{ label('table_widget_options_component.delete_all_button') }}

        toggle-button(
            @change="switch_delete_all_button" 
            :value="delete_all_button" 
            :sync="true"
            :width="100"
            :labels="{checked: label('table_widget_options_component.delete_all_button.visible'), unchecked: label('table_widget_options_component.delete_all_button.hidden')}")

    .archive_button(v-if='widget_options && widget_options.crud_api_type_id && is_archived_api_type_id')
        .input_label {{ label('table_widget_options_component.archive_button') }}

        toggle-button(
            @change="switch_archive_button" 
            :value="archive_button" 
            :sync="true"
            :width="100"
            :labels="{checked: label('table_widget_options_component.archive_button.visible'), unchecked: label('table_widget_options_component.archive_button.hidden')}")

    .refresh_button(v-if='widget_options && widget_options.crud_api_type_id')
        .input_label {{ label('table_widget_options_component.refresh_button') }}

        toggle-button(
            @change="switch_refresh_button" 
            :value="refresh_button" 
            :sync="true"
            :width="100"
            :labels="{checked: label('table_widget_options_component.refresh_button.visible'), unchecked: label('table_widget_options_component.refresh_button.hidden')}")

    .export_button(v-if='widget_options && widget_options.crud_api_type_id')
        .input_label {{ label('table_widget_options_component.export_button') }}
        toggle-button(
            @change="switch_export_button" 
            :value="export_button" 
            :sync="true"
            :width="100"
            :labels="{checked: label('table_widget_options_component.export_button.visible'), unchecked: label('table_widget_options_component.export_button.hidden')}")

    template(v-if="export_button")
        .has_export_maintenance_alert
            .input_label {{ label('table_widget_options_component.has_export_maintenance_alert') }}
            toggle-button(
                @change="switch_tmp_has_export_maintenance_alert" 
                :value="tmp_has_export_maintenance_alert" 
                :sync="true"
                :width="100"
                :labels="{checked: label('table_widget_options_component.export_button.visible'), unchecked: label('table_widget_options_component.export_button.hidden')}")

        .has_default_export_option
            .input_label {{ label('table_widget_options_component.has_default_export_option') }}
            toggle-button(
                @change="switch_tmp_has_default_export_option" 
                :value="tmp_has_default_export_option" 
                :sync="true"
                :width="100"
                :labels="{checked: label('table_widget_options_component.export_button.visible'), unchecked: label('table_widget_options_component.export_button.hidden')}")

        .can_export_active_field_filters
            .input_label {{ label('table_widget_options_component.can_export_active_field_filters') }}
            toggle-button(
                @change="toggle_can_export_active_field_filters" 
                :value="can_export_active_field_filters" 
                :sync="true"
                :width="100"
                :labels="{checked: label('table_widget_options_component.export_button.visible'), unchecked: label('table_widget_options_component.export_button.hidden')}")

        .can_export_vars_indicator
            .input_label {{ label('table_widget_options_component.can_export_vars_indicator') }}
            toggle-button(
                @change="toggle_can_export_vars_indicator" 
                :value="can_export_vars_indicator" 
                :sync="true"
                :width="100"
                :labels="{checked: label('table_widget_options_component.export_button.visible'), unchecked: label('table_widget_options_component.export_button.hidden')}")

        template(v-if="tmp_has_default_export_option")
            .default_export_option 
                .input_label {{ label('table_widget_options_component.default_export_options') }}
                .input_wrapper
                    multiselect(
                        :preselect-first="false"
                        :multiple="false"
                        :close-on-select="false"
                        v-model="tmp_default_export_option"
                        :options="export_page_options"
                        :custom-label="filter_visible_label"
                        autocomplete="off"

                        :searchable="true"
                        :internal-search="false"
                        :hide-selected="true"

                        :key="'default_export_table_widget_options_component_' + tmp_default_export_option"

                        :select-label='label("multiselect.selectLabel")'
                        :select-group-label='label("multiselect.selectGroupLabel")'
                        :selected-label='label("multiselect.selectedLabel")'
                        :deselect-label='label("multiselect.deselectLabel")'
                        :deselect-group-label='label("multiselect.deselectGroupLabel")'
                    )

    .vocus_button(v-if='widget_options && widget_options.crud_api_type_id')
        .input_label {{ label('table_widget_options_component.vocus_button') }}
        toggle-button(
            @change="switch_vocus_button" 
            :value="vocus_button" 
            :sync="true"
            :width="100"
            :labels="{checked: label('table_widget_options_component.vocus_button.visible'), unchecked: label('table_widget_options_component.vocus_button.hidden')}")

    .can_filter_by(v-if='widget_options')
        .input_label {{ label('table_widget_options_component.can_filter_by') }}       
        toggle-button(
            @change="switch_can_filter_by" 
            :value="can_filter_by" 
            :sync="true"
            :width="100"
            :labels="{checked: label('table_widget_options_component.can_filter_by.visible'), unchecked: label('table_widget_options_component.can_filter_by.hidden')}")

    .use_for_count
        .input_label {{ label('table_widget_options_component.use_for_count') }}
        toggle-button(
            @change="switch_use_for_count" 
            :value="use_for_count" 
            :sync="true"
            :width="100"
            :labels="{checked: label('crud.field.boolean.true'), unchecked: label('crud.field.boolean.false')}" 
        )

    .show_bulk_edit
        .input_label {{ label('table_widget_options_component.show_bulk_edit') }}
        toggle-button(
            @change="switch_show_bulk_edit" 
            :value="show_bulk_edit" 
            :sync="true"
            :width="100"
            :labels="{checked: label('crud.field.boolean.true'), unchecked: label('crud.field.boolean.false')}" 
        )

    template(v-if="show_bulk_edit")
        .show_bulk_select_all
            .input_label {{ label('table_widget_options_component.show_bulk_select_all') }}
            toggle-button(
                @change="switch_show_bulk_select_all" 
                :value="show_bulk_select_all" 
                :sync="true"
                :width="100"
                :labels="{checked: label('crud.field.boolean.true'), unchecked: label('crud.field.boolean.false')}" 
            )

        .cb_bulk_actions
            multiselect(
                :preselect-first="false"
                :multiple="true"
                v-model="cb_bulk_actions"
                :placeholder="label('table_widget_options_component.cb_bulk_actions')"
                :options="cb_bulk_actions_options"
                :custom-label="cb_bulk_actions_label"
                :allow-empty="true",
                autocomplete="off"

                :searchable="true"
                :internal-search="true"

                id="cb_bulk_actions"

                :select-label='label("multiselect.selectLabel")'
                :select-group-label='label("multiselect.selectGroupLabel")'
                :selected-label='label("multiselect.selectedLabel")'
                :deselect-label='label("multiselect.deselectLabel")'
                :deselect-group-label='label("multiselect.deselectGroupLabel")'
            )

    .has_column_dynamic
        .input_label {{ label('table_widget_options_component.has_column_dynamic') }}
        toggle-button(
            @change="switch_has_column_dynamic" 
            :value="has_column_dynamic" 
            :sync="true"
            :width="100"
            :labels="{checked: label('crud.field.boolean.true'), unchecked: label('crud.field.boolean.false')}" 
        )

    template(v-if="has_column_dynamic")
        .column_dynamic_page_widget_id
            .input_label {{ label('table_widget_options_component.column_dynamic_page_widget_id') }}
            multiselect(
                :preselect-first="false"
                :multiple="false"
                v-model="column_dynamic_page_widget"
                :placeholder="label('table_widget_options_component.column_dynamic_page_widget_id')"
                :options="page_widget_options"
                :custom-label="page_widget_label"
                :allow-empty="true",
                autocomplete="off"

                :searchable="true"
                :internal-search="true"

                track-by="id"

                id="column_dynamic_page_widget"

                :select-label='label("multiselect.selectLabel")'
                :select-group-label='label("multiselect.selectGroupLabel")'
                :selected-label='label("multiselect.selectedLabel")'
                :deselect-label='label("multiselect.deselectLabel")'
                :deselect-group-label='label("multiselect.deselectGroupLabel")'
            )

        template(v-if="column_dynamic_page_widget_id")
            template(v-if="column_dynamic_page_widget_is_type_date")
                .column_dynamic_time_segment 
                    .input_label {{ label('table_widget_options_component.column_dynamic_time_segment') }}
                    .input_wrapper
                        multiselect(
                            :preselect-first="false"
                            :multiple="false"
                            :close-on-select="false"
                            v-model="tmp_column_dynamic_time_segment"
                            :options="segmentation_type_options"
                            label="label"
                            autocomplete="off"

                            :searchable="true"
                            :internal-search="false"

                            track-by="id"

                            :select-label='label("multiselect.selectLabel")'
                            :select-group-label='label("multiselect.selectGroupLabel")'
                            :selected-label='label("multiselect.selectedLabel")'
                            :deselect-label='label("multiselect.deselectLabel")'
                            :deselect-group-label='label("multiselect.deselectGroupLabel")'
                        )

            .column_dynamic_component
                .input_label {{ label('table_widget_options_component.column_dynamic_component') }}
                .input_wrapper
                    multiselect(
                        :preselect-first="false"
                        :multiple="false"
                        v-model="column_dynamic_component"
                        :placeholder="label('table_widget_options_component.column_dynamic_component')"
                        :options="component_options"
                        :custom-label="component_label"
                        :allow-empty="false",
                        autocomplete="off"

                        :searchable="true"
                        :internal-search="true"

                        :select-label='label("multiselect.selectLabel")'
                        :select-group-label='label("multiselect.selectGroupLabel")'
                        :selected-label='label("multiselect.selectedLabel")'
                        :deselect-label='label("multiselect.deselectLabel")'
                        :deselect-group-label='label("multiselect.deselectGroupLabel")'
                    )

    .do_not_use_page_widget_ids
        .input_label {{ label('table_widget_options_component.do_not_use_page_widget_ids') }}
        multiselect(
            :preselect-first="false"
            :multiple="true"
            v-model="do_not_use_page_widgets"
            :placeholder="label('table_widget_options_component.do_not_use_page_widget_ids')"
            :options="page_widget_options"
            :custom-label="page_widget_label"
            :allow-empty="true",
            autocomplete="off"

            :searchable="true"
            :internal-search="true"

            track-by="id"

            id="do_not_use_page_widgets"

            :select-label='label("multiselect.selectLabel")'
            :select-group-label='label("multiselect.selectGroupLabel")'
            :selected-label='label("multiselect.selectedLabel")'
            :deselect-label='label("multiselect.deselectLabel")'
            :deselect-group-label='label("multiselect.deselectGroupLabel")'
        )


    .legende_tableau
        .input_label {{ label('table_widget_options_component.legende_tableau') }}
        Vuequilleditor.valign-middle(
            v-model="tmp_legende_tableau"
        )

    .field_refs
        .input_label {{ label('table_widget_options_component.columns') }}
            span.fa-stack.fa-lg(v-tooltip="{content: read_label('table_widget_options_component.columns.ca_tooltip'), theme: 'info-tooltip'}")
                i.fa-solid.fa-question-circle.fa-stack-1x
        template(v-if='columns && (columns.length > 1)')
            Vuenestable.nested_field_refs(
                v-model="editable_columns"
                max_depth="1" 
                :hooks="{'beforeMove': beforeMove}"
                @change="changed_columns"
                key-prop="id"
                children-prop="children"
            )
                template(slot-scope="{ item }")

                    Vuenestablehandle(:item="item" :class="{header_color:item.type == 5}")
                        i.fa-solid.fa-bars.fa-fw(aria-hidden="true")

                    .item_content
                        Tablewidgetcolumnoptionscomponent(
                            :column="item" 
                            @add_column="add_column"
                            @remove_column="remove_column"
                            @update_column="update_column"
                            :page_widget="page_widget"
                            :get_new_column_id='get_new_column_id'
                        )

        template(v-if='columns && (columns.length == 1)')
            .item_content
                Tablewidgetcolumnoptionscomponent(
                    :column="columns[0]" 
                    @add_column="add_column"
                    @remove_column="remove_column"
                    @update_column="update_column"
                    :page_widget="page_widget"
                    :get_new_column_id='get_new_column_id'
                )

        .column_wrapper
            Tablewidgetcolumnoptionscomponent(
                :column="null"
                @add_column="add_column"
                @remove_column="remove_column"
                @update_column="update_column"
                :page_widget="page_widget"
                :get_new_column_id='get_new_column_id'
            )