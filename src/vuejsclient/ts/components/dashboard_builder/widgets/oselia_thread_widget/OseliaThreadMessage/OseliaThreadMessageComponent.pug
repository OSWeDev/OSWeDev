.thread_message

    template(v-if='is_loading_thread_message')
        .is_loading_thread_message
            i.fa-duotone.fa-spinner-third.fa-spin

    template(v-else)
        .thread_message_header
            .thread_message_header_left
                template(v-if='thread_message.role_type == role_assistant')
                    .thread_message_header_left_avatar
                        img(:src='role_assistant_avatar_url')
                    .thread_message_header_left_username
                        | {{ label('oselia_thread_widget_component.thread_message_header_left_username.oselia') }}
                template(v-else-if='thread_message.role_type == role_system')
                    .thread_message_header_left_avatar
                        img(:src='role_system_avatar_url')
                    .thread_message_header_left_username
                        | {{ label('oselia_thread_widget_component.thread_message_header_left_username.system') }}
                template(v-else-if='thread_message.role_type == role_tool')
                    .thread_message_header_left_avatar
                        img(:src='role_tool_avatar_url')
                    .thread_message_header_left_username
                        | {{ label('oselia_thread_widget_component.thread_message_header_left_username.tool') }}
                template(v-else-if='thread_message.role_type == role_function')
                    .thread_message_header_left_avatar
                        img(:src='role_function_avatar_url')
                    .thread_message_header_left_username
                        | {{ label('oselia_thread_widget_component.thread_message_header_left_username.function') }}
                template(v-else-if='thread_message.role_type == role_user')
                    .thread_message_header_left_avatar
                        img(:src='avatar_url')
                    .thread_message_header_left_username
                        template(v-if='is_self_user')
                            | {{ label('oselia_thread_widget_component.thread_message_header_left_username.me') }}
                        template(v-else)
                            | {{ user_name }}
            .thread_message_header_right
                .thread_message_header_right_date
                    | {{ format_date(thread_message.date, t('DD/MM/YYYY HH:mm:ss')) }}

        .thread_message_body
            template(v-for='message_content in thread_message_contents')
                .thread_message_body_content
                    template(v-if='message_content.content_type == message_content_type_text')
                        .thread_message_body_text(v-html='message_content.value')
                    template(v-else-if='message_content.content_type == message_content_type_action_url')
                        .thread_message_body_action_url
                            Oseliathreadmessageactionurlcomponent(
                                :action_url_id='message_content.action_url_id'
                                @thread_message_action_url_updated='$emit("thread_message_updated")'
                            )
                    template(v-else-if='message_content.content_type == message_content_type_email')
                        .thread_message_body_email
                            Oseliathreadmessageemailcomponent(:mail_id='message_content.email_id')

                    //- TODO
                    //- template(v-else-if='message_content.content_type == message_content_type_image')
                    //-     .thread_message_body_image
                    //-         img(:src='message_content.assistant_file_id')

        //- .thread_message_footer => on peut vouloir complÃ©ter cette partie pour modifier et rerun un message iso l'interface openai
